{"version":3,"sources":["/Users/se/www/maintined/rkta-ui/src/Theme/defaultRenderrer.jsx","/Users/se/www/maintined/rkta-ui/src/util/invariant.js","/Users/se/www/maintined/rkta-ui/src/Theme/withStyle.jsx","/Users/se/www/maintined/rkta-ui/src/atoms/Atom/index.jsx","/Users/se/www/maintined/rkta-ui/src/atoms/Bage/Bage.mdx","/Users/se/www/maintined/rkta-ui/src/atoms/Bage/index.jsx","/Users/se/www/maintined/rkta-ui/src/atoms/Font/index.jsx","/Users/se/www/maintined/rkta-ui/src/atoms/Paper/index.jsx"],"names":["defaultRenderrer","Component","_ref","href","rest","Object","objectWithoutProperties","react_default","a","createElement","assign","element","pickProps","context","props","elementName","ref","theme","children","_context$theme$elemen","defaultStyle","styles","_Object$keys$reduce","keys","reduce","acc","key","value","nextStyle","nextProps","defineProperty","objectSpread","css","modifyStyles","withStyle","Element","displayName","WithStyle","forwardRef","Context","Consumer","_ref2","modifyElement","providerIsMissing","condition","message","Error","invariant","contextType","concat","Atom","atomRef","getColor","location","changeTheme","touchDetected","_Users_se_www_maintined_rkta_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","defaultProps","RawAtom","layoutProps","MDXLayout","MDXContent","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","mdxType","id","parentName","className","docz__WEBPACK_IMPORTED_MODULE_3__","of","RawBage","__position","__code","__scope","this","Playground","Props","Bage","__codesandbox","___WEBPACK_IMPORTED_MODULE_4__","primary","secondary","color","success","fitRight","hardRight","color12","fitAll","hard","warning","fitLeft","hardLeft","isMDXComponent","react__WEBPACK_IMPORTED_MODULE_1___default","_Paper__WEBPACK_IMPORTED_MODULE_2__","rounded","overline","nowrap","Font","react__WEBPACK_IMPORTED_MODULE_2___default","_Atom__WEBPACK_IMPORTED_MODULE_3__","nextCss","_Users_se_www_maintined_rkta_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","getFontProps","Paper","_Font__WEBPACK_IMPORTED_MODULE_3__","rize","size","_Users_se_www_maintined_rkta_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","blur","Math","max","pow","boxShadow","cssSize","width","height","_Users_se_www_maintined_rkta_ui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","modifyProps"],"mappings":"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","file":"static/js/atoms-bage-bage.f935cb55.js","sourcesContent":["import React from 'react';\n\nconst defaultRenderrer = (Component, { href, ...rest }) => {\n  if (href) return <Component {...rest} element=\"a\" href={href} />;\n  return <Component {...rest} />;\n};\n\nexport default defaultRenderrer;\n","export default (condition, message) => {\n  if (!condition) throw new Error(message);\n};\n","import React, { forwardRef } from 'react';\n\nimport Context from './Context';\nimport defaultRenderrer from './defaultRenderrer';\nimport invariant from '../util/invariant';\n\nconst modifyStyles = (context, { children, ...props }, element, ref) => {\n  const { defaultStyle, ...styles } = context.theme[element];\n  const { nextStyle, nextProps } = Object.keys(props).reduce(\n    (acc, key) => {\n      const value = props[key];\n      if (value === true && key in styles) Object.assign(acc.nextStyle, styles[key]);\n      else if (!(key in styles)) Object.assign(acc.nextProps, { [key]: value });\n      return acc;\n    },\n    {\n      nextProps: {},\n      nextStyle: { ...defaultStyle },\n    },\n  );\n  const css = { ...nextStyle, ...props.css };\n  return { ...nextProps, ...context, children, css, ref };\n};\n\nconst pickProps = (context, props, elementName, ref) => {\n  if (elementName in context.theme) return modifyStyles(context, props, elementName, ref);\n  return { ...props, ...context, ref };\n};\n\nconst withStyle = (Element, key) => {\n  const { displayName } = Element;\n  const WithStyle = forwardRef((props, ref) => (\n    <Context.Consumer>\n      {({ modifyElement, providerIsMissing, ...context }) => {\n        invariant(!providerIsMissing, 'Please use the Provider');\n        const render = modifyElement || defaultRenderrer;\n        return render(Element, pickProps(context, props, key || displayName, ref));\n      }}\n    </Context.Consumer>\n  ));\n  WithStyle.contextType = Context;\n  WithStyle.displayName = displayName;\n  Element.displayName = `Styled ${displayName}`; // eslint-disable-line no-param-reassign\n  return WithStyle;\n};\n\nexport default withStyle;\n","/** @jsx jsx */\nimport PropTypes from 'prop-types';\nimport { jsx } from '@emotion/core';\n\nconst Atom = ({\n  css,\n  element: Element,\n  getColor, // eslint-disable-line react/prop-types\n  location, // eslint-disable-line react/prop-types\n  theme, // eslint-disable-line react/prop-types\n  changeTheme, // eslint-disable-line react/prop-types\n  atomRef,\n  touchDetected, // eslint-disable-line react/prop-types\n  ...rest\n}) => <Element {...rest} css={css} ref={atomRef} />;\n\nAtom.propTypes = {\n  atomRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({})]),\n  css: PropTypes.oneOfType([PropTypes.shape({}), PropTypes.func]),\n  element: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n};\n\nAtom.defaultProps = {\n  atomRef: null,\n  css: null,\n  element: 'div',\n};\nAtom.displayName = 'Atom';\n\nexport const RawAtom = Atom;\n\nexport default Atom;\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport Bage, { RawBage } from './';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"bage\"\n    }}>{`Bage`}</h1>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { Bage } from 'rkta-ui';\n`}</code></pre>\n    <p>{`Bage is a preconfigured sheet of paper, which can be used in different ways.\nUnlike it's done in Material UI R•K•T•A Bages are not opinionated about their positions.`}</p>\n    <h3 {...{\n      \"id\": \"composition\"\n    }}>{`Composition`}</h3>\n    <p>{`Bage `}{`←`}{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"/src-atoms-paper-paper\"\n      }}>{`Paper`}</a>{` `}{`←`}{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"/src-atoms-paper-paper\"\n      }}>{`Font`}</a>{` `}{`←`}{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"/src-atoms-atom-atom\"\n      }}>{`Atom`}</a></p>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={RawBage} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"basic-example\"\n    }}>{`Basic example`}</h3>\n    <Playground __position={1} __code={'<Bage primary>A bage</Bage>\\n<Bage secondary color=\\\"paper\\\">\\n  A bage\\n</Bage>\\n<Bage success>A bage</Bage>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Bage,\n      RawBage\n    }} __codesandbox={`N4IgZglgNgpgziAXKCA7AJjAHgOgBYAuAtlEqAMYD2qBMNSIAPOhAG4AEE6AvADogAnSpQL8AfIwD0LVmJABfADQg0mXACsEyEFRp0CDSQCojvVO3YAVPBDjsAwpUwBlAIYYARpSzs8rux4wdOyuAK4ElESuBBDkrlBQAJ7sAOZ0MALRMOjsoXBoKWYWAAZUmHDu6F5YGcU47ACSYOyJlKEA5AIw7OShAhBtdniUAO7sBH4Evq4ADjPp6IotbT3uRT14MOQA1uxtU20C7OiU5EMZMIi-BAQzcIiSkikQE6EeOFREkmXwldXfTl-nm8GTM6yay1C7Gw836dHI3XcyTgBAEoRSKVgdhGLzw4xsdgqwKwSxmsH83UytkR5lscFCMHW1FSuLe9UQAEozEZJGYIEQZpQBFMAEowVzkKZgIREdidcWS9oAbj5AqFooVBAAIgB5ACy7GlkTlXQlBAAtCciMrVYLhQ5IoLUPpDTK5ThJNhXALYDbUGYxWbdXqcF0MBkABTrZhsMTrCyMPAAZjEjjVzponDVwuy7BxEx6gKJVRBAkQUmTcfMFnYjBmYgjDSmUWSztzrnQLBi1Hi7BmQju40oqRgUxe7DDmH6qBSeZgCQ5Unr8draadLskVYT0ljijMJ16RH0ODSBAAorAjzQAEKJBroCOdYQEdpc1AcpUKZRen0wHCaMgdGoWh6EQFRsymYB2AABSgVxEhSIRQgwJZoIHOx5FdY12gPAAvP1-TtKZr1cNIligkVXBGEi0nYTCjVldoPTgARyEkaJIjgSQaJgAiIPYQNJSwxjTUVMFUF0FFjlOXDnAIRIsXYbh2GAdYogEZ5UCudoAAZ2CTGYsHaPdqxmDsWBnbSABZDPYAA2QzjPWMBgIAMW9aBEm0_hnEOBEHUwGChH4JYiGoSg4DMhEnOrFyaGcCBcMudgAEYrJM-RxMkqYAEE5iU9gIyg8gbCgdAwzojklLEQroxkdgUQUmBuGAPC5KauB5C3GtgBK6ByuCAAyQbxkSeZKGaPqyoq7hZrlMBkMlAZUHadgAH4Nn6sMIyqq4poG1BMurKQZCrN8zBhdVjhgMAwigKYduq2rjry5dqwTQSCBwVzMhSK8CG6mtax4vt-nUxIxBy9gPFImApB4wGa0YEG4C2ah0FcARkioKAhT4EAzNhcQVyBqGYbSEna242HEYTFHQnIBE4DgSHodh-GaZXKRPu-37_u6qRXrOswvxAFi2I4oguJ4yRVGwf84CwQDdBAgwwMIq7PuEk1NT4oigsoGZLDG-BtfaftDfNeT5jgP1bSu6DZgyM2cA9R3YT1q78zwdrYBdj1XckawYCPSRvd93iVX9CTqCkkHlKKw0XhyhIlkgAgABkboINOXhFCAUkIJZXdDeApnkKruBqqNjvd52kPDHJKFYDIoDQbpUFGTIZhUkuuhRTDNzMD9xJ4nAWEiuDEgAOW9bplPaHi_THi2jZNuxlNU6tjCMAT4FHdg9UxzS7B5Zzk4SK40MN42bZwLxKCgEyLB3vfUamLOwCmI-NLQdgz9ii8T-BAr4DlvvAe-wgn7rFfmKd-AkC6EEPsfP-ACLDp3zoXEBBs153wftAw6Ucx6YFuqEe619Byb3PgQFOUAri3SgKjZ-SdM7Z3ofEJh1DMGEHYYwmAGUo4XSwPrbKAkqLx3YDxQRzphFXRIXdKY4d5KwAjDxEeqBRbi3YhEKWkg64CFluGDQitlbAX0AwDW9otYMR1maT29oKHgLsDY82A4rbrztqgSxUxXLAX9pIXxNB7GKNxBHfxgdg6hyUU1TxoiwosDAIkChG9CrFWZksfoSUlj5CyfiEO_D2Al1XhhSuNUt4WFETIgg9hmYFWAPIKOFgIDNAjJkmAVVyk1lER4KAfQCpHwmDgKIWBWmJW6CYfSSwACs6igY6g8OoLYX1_D5BSKgCMVSalwHIpTaozg_AnBGFcYolMLA6VsgAEmAG0-QlzgA9L6Lcnw5yfAaRhhGHSSxPnsG-TpHAAAmDkzCgZnLuW0_-7B_lPPYFch5RxJCQuhS8icKR3m_K-V8nAaUgWnJ-WCsZEKkzQthb0-FE4xnyBSnc804KEVQtsm81wHyMU_MxSlQFlNijAsqo0ui6xmmFRye0lSK5RFnDgAlJKBVihXKFU84ovKLDzMWZKHAKyC7rM2eklSeYuATD2szSVBTNiIOweKo1PL1hHQsF0AgfRzBQXnPkmg2kZDGUKa7YpSxxVXCgiXLV2yPUfFqZhBpZgw3R1EfogqxSnqMECZBEu8TmlJPQhGYpHJB5iGkfo8etgyTwVnkeAq7R9F-lzavJxdT1htNATfdeOBUChCIIEAQzChV1twRAptLaMgCLMLm-RZCCDJOrdWWtrL1gdsnYQ8Sl17RDvurqiYEcIz6PUZo1iQdNhRNCcov8mglbaBVuY9W_FPrkUNEKEYmN0BimaPRN08o7HSO8Q6PQWApRPo9I4D9L4o5vsXQQMU4YBBdCOC4j0QGQNTnA8EzgqBWCYwgO4L92FA7hGgIYpD_RUOxNjs2JwKaI4pIjCez9l79phmLp69CdElhOv-hkm6pSRXVlEVBIDEcaM4EaopTCylyNfQmPkgA2ox_QABdXlHH2BVO43J7AI66MCfYMqpZOBtgwESHAdN6EOSl3QAzGANcgYRglOQJYWnEisc6UDURSHenz1BobOAonrPScpgKiMjmGRKTmqiPzw12DWYQw1fdcAqrqdVeqtZ5nGaNqUwpvj8B3Pack7MkF85UacBaQAQgjKFv-KXItRYWRp2L6yLOJc_cky9aXEiSauL57oFdFU1ltfakIjN2tKBXHZmsVTkm-r6-9QbSX92-qDVx_d9GVyjYsJlsVtTN5Bvk_unjxTg0YV5Z1gQDq1tKbq0GoT3rSoHW9dqroD6o4RrMKImYsRtijoTqdlzdwGOXn0EWgp13bP8paRJmgP2wtCZwCJo8VU9vmGTYkkjZGzEUfe4GoHBAfvMbAJl6HOqinoR42967dFbvSNEdEv2CcLzOpziF7T_32MEZ1RPAtM8550QKpT_6MmGcAHU91NQKi5AQN6BB3puhGPTrmMesdM0jX9tBP04F_fSI8AhaYqUTrDxIHP9CkiEKwLgGQGhwD1HSAo-PEflzpyCmsaAcMoZoBGPLFt9dTiNyb5mZu5SwXFDlvI3QRMGxdxkV87X7MM8nM7ZSmvteZgAD6x-uqQ-6MGMjgdDx10cXWI8CAjDH6nj2djJIR3-3XkuafJHj8cfNU90cThY5loG8hrVI0kHLpTivY7NoyN1DkmXecrv3R8C34CCpt8_by_vPtB9M5r6z5SM_C1z15XnvNk9F_FuUsUCOOQrkL5Z0eeQCr2CPGhHANuNBLS2FcD0mA5pz8d0oOaMymQiA0p96s6ONrM_7fYJPiOxO51ZEF0boFFl0p8moo5N0JYdEuIE1DE1AFYj0KAzFQJwJ9ZrEn1RJ_17YHEwF14zZV53EbZPE30codF_EyDIh4MyduhIMA4PRIkYAw4-dfQScGdTwE0XtCocYhQlhTxHBcY2068UQrdCxUApIA06kg1-4vpxVvVH4hQrh-CFCc8eCBAqoI0v87Uf8_VXYZDLt7hFNP0tkidw02DxCfE_EE5ipztqMRxqkVD5DBCeMZDKonoZdGBKDZRUd8ZIo1gQBe5XYODgIi81C-DRwBDeDhCCBM1EZepbC6Bm9BYdEzppEE1V9mcQcF4E0_R0jK18CqF2MEitIcEnFG1ARmE1DO0yjqAYAdQwBwEIxRNHEG0URpwUhUI8C74e1W0MtmFlDBDqiG0FoJIcBbAxQABHUICALoRYMwswdIoDLgzpKjOgK4JtVOdYKouUGKO7GRfWIDMA1dBNDdJQMWLdRg1vC3BWUxPQVAt9YqU0WgMfcuM2LA-DIDRgl2aQEA4dRgzxedKYQ48gJ4mAF4oqdYZ3A3AQN3U3SycYNEfhNSIjRJPPdYshAhCwCHZKT4ndJEoo9wNIRgx6epfoiIlQkk0bNrEWM4rRS46DOgWDDIRA241WCxc9TUN43WcwqSBk0DcDAqCMNcWomgS9PAa7FwsuNwquNjJpFpcUljOvbQ8wRgYUjMRNPQsuTCHw_gVwfgXwa7FqBUsALNXbb_FUtUl0YAPuLU4_bNeY6OQExPUAvkpkgQSA2krdTDKAbDZDVDG449FAtWEAJ0w44vLsZaUKeACoNIUQ7zPLXQCM6gKqCYIQMYZ0MYM8MDIUCMI8ZmWGdRCNKA7RTiSQLw-A-WQ9Vk09EAV-AAAUPXYEbIATfRaJtgILcWtngHgygkbMfWwjrJDhEGWgBC6HwwsPYC8MFJWPSXWFRyuDzzJIcOcOPwRXgHPwtAnmv1gDv3bjrzNEkEIK7LgHWFxjiG7FQCWBP3XLQE3Kvxv13OdH3MlEPM7PXnWGxKvLXLP1vMvwqAfPv2fIIFfMtmPK2L8BnBgEYK_NPw3L_O3Nv0AqwJApmCIPgHWElnvWYQiAZjwC1FHCWWyBgpvIvy3IAr3OQqPPfOrBtJRHDVY0YDz0CNLgHh6GZhanFUwkNOAEwpulNPEi8JwHyPbMKIsF4rACGLvlqPqMaOaK6IgRGMs1KNaL8HmCKgrj6K2OZkkogWkoaJNiaLbIgTgFUpM3qSBWUrvkUs0urHnMst0udBkoMrkvrTvlR06NcuMtRAKBsr2MEqWLo1EpCB0XvXRM2PY20rkwxOYTspwjYF2Kjn8ur3X2c3aC8IBKAKmFEUohGCnOUi8OkVDN-KXQKppOUDpLxJ-KTwIEYJZMDLuODNIM7GZDoJLN0RymatQEkBS3gxBlaslmllhm6v3Xgy1DYGhP8QGskDGqDwMR6oA34gTUmpgICWAmGpiQWv1gAAlxQpxlrSydqOwMh1rWCcCpho1-qVr9ETrI4zr2BnBWBZxLrSyHqUgbqSD-JrxwgIhzBWqwpYBegsRuJvrqB3rNqroGhUAZhwgSIcs_rH4tgyF4BJBIbobgLYamD5q7rUbwgdRwhAL4aAakauIcbgK8aCB78wa7qM5bA0NGJA5_rEagaaaUQqavF-IWaCAmwQ5_FGbAbkbOaUbaAvgsb2b9ZObuaiBrwnBkhCamaBbaahaQ5uIZa2a31nBHtUBnQINv0PQ-bibJANa0Bta1b-JLBr9nFdbJB9agbzaPAuI7a4BeMRrX1z0IA5g_ZWqwAsBJB84PbMaXa7qQTxRaA9RsgUMABFBkOES29DD0b074UEsOlgVwKOjICAbs12_WXefwQsQQ2O-mgEQQjKg44qyCLYlQ7ZNScO1O6OjOww4OrIZOyOuu-AHaEydYDqk4S89YHiZhGa6E5hBNZhQ6qcZhfRZhV6ju6sL6m4agZhUmjGheqG3G_G9uZhTmje2myWrelESW6W9ARISezW7W5hR26eiwP2skfEosz06A0sru0GlLAM5Ahq9kkRWpVqjDGIH08VEuuRMuti3TTpGbJqX1FcPfbSHpU4bYGKIGMyTsAoaWueogK4T5FcBBiyFISwQ2NB7lTBgoYBbSFKByIyfB8yAobhbBdoEhxyZhBbFhWhcBsbAhmcZBnRPBjBihmcHBmYThlh7hlIIhmdeBwRqh_hiwBh9OYRqCVhoRthH5ObQBYDU1KbOR8RxRqk048qrdKamWZ-gCeqtks9D-gu90egyQBOv-wqzK504dIBiE6sUB2AZhoGSBuUNAe_c0aBnYOBmsdSTSbSPSHAJMbAPxiwORoJ1YKAcgCMHAKyAADmwHYAAGp2AbIsAORwn2AW5hRYh4gU4NVtIiAuB0BfR6HmF04mHZT_GUESj0HqwpGgEFGBsAm0BhGGnJHKm85VGamLA2nUANHOmlHqSNE762quIB6pwbqX6gI36TGrpxVwl46f7vhmYeyq9Zq2cv6GDKq1D_7gDqqHGQGy6I5XGawvARcMggnsmTUsEbnuVLmpxeHjkqUfA4BH4uAYVWpxqpxD8Kn1gTgbhsgpsnmMgzm5QgXaB0BVoGGYZUZ79zn-m6mJGaw5GXmRG0XBGOnyHEG2GRAOHMWImxHenhmGG0B34psBnhH2gAB2f5RyJRppRDWwCAG_KbfXfIDwaAF4LyOUGwTsOgWFjKbR84--3ROAgxrQV-4xtAxZz-q27-rDaxwA0uo58VRxiwZx5KAbOKAgdyEppIbyEANwcwH6dwcgWwKgEKdgfgHaqAFuGIOIdgaeGABkG1_gEUSgLwCID1k1mAFISgboAAVQaBtaJDgHNFRn6DAGyb1aNWIdIbjeAm5xgF6faCsh0h0mydgGBYEA1olAKCCaxSmToZXHvx2vTf-Qyeyfl2A0ZPTvhPaENhiBKaSizmeG5bbnklraU3wqoEyAvO0k7mdD8YYejeaSRavRoANc8mNdgngluhmPYDGrX0SBtelsoG2CiEvJgniGiDQEoCWAAHEYAhRnhXBsl07Y2AXqwwpO4_CEQp29XZ2jXKZ2h-AM4GYuBXB7r3A7BwERh-haABA_Wv3LWMZ30PnYA_WldH5_A_WcoMB4hug9Rwo_W0PUAJRKBYPDgM6jhXWRgbXHA-h8PQpwpH3eJb31hQg5gMg4hUYp263LBMhxDBdUG5RaPYQGOqPy3RwQOC3LWm2_laXS2yGrVmF4X5x24p2BnUXiW8WUh2HIh5O-xBGMXhmFOsGcWuHFOhnb3-nwgQW-m9gopeXi2rJsm_d82nVJRh3aix3Kj9BrmTO63Cm1ltIEQ9ABBHO5yCASpjOBs639kOxRgom3mUV3l_kpkpklhovYvIUYvMVq2smDO5MIpbPsEoJrPnBMv7PR2mX0ugPZgp2RgbBaBBPkp2hO5iuZhe3P0dRcmwBcYjk5R5w247hbBsnm4Mhmuwv-XSmhW0vaup2euBA-uRhudu4oHTRthzQRghQYXuUFuRcpuSu5QPBZv5vFvfPqw8AxpNhxCpt9uZhDvDD2gwgIhhWPylMZGVw3O24PO5RYAv5duYEEUhV1g8AUpn3gIE25QABOJN7lPV1N9Nx7wgYPblCttN-5wH4HvjvNwTotuUc0FKHAMT3biwPAf5X7-KMZbSOyF5ZNmgMHuH9oCHkDnN9uSt8nonstsbXNgTszpt80P5THtL5MPHggf7jNhJhnoGUH2HnhOUTN7N6Hmn4X6hxJgXwrvAKybn3npMGtkHlNqX6yLN6n50WnkXjN4n6H_j8FlnlIYt6L2XhhvAKZRXgnuUat2X9BNX9NsXrXmAHX6hpMBl8Txp5hPAOya3pKbSf5T3knggMn3XqZTXiX7X9XuUD3-39gJno3wt4Tkt839tN4GICmmAH7kz-Nm3mhhHxnyXqtlXlcIXp3yPxH5n5Pk3uUP5FKDniTqdDPl4WAXH3Pv7_PtKePmHqt_Xsvx38niP8XqvpPoT2v3SLFNP9YLwQ-9v3VzvgPuUbvr3oGXv8n_5fvsbcv8n53g3pH434tt5rH6GEGkohf_Hpfmh0vov6Pvv-Pnf8Pyvxnw3_Nw_uvqf1fwruIGYIdjvy_qruyh77F8N-W_QXoP11579R-b_GvhZ2n7VgxuiLf_jzy75gCaw6_XXpvwf4QDpez_Nfq_2R5Ntj-t7UZsWSmqj1jqUrasvcX4hLMdmljVZiq0dK2NgSzMTVnY3ugQtSS9FD0jo3FZcRrqVAoxjWTfR0DFWKzZVus3Br2gc6dgNQmYyYgWNLi-zHkpBDU6wg2cgmSuqoInBtAMAjgfbBkBSSZAWAeQdwp0jBYCBlORAYBJRFMGGETBEAPIJJ0W4ZBrBVDOwU4IcEdgvBLgq5gIF4a2CfBeQK4I4OcEz9XBAQw2B4OCHeD7BIrGxmq1AIasTm1VLgSuD7h6D0ABg7WrpnaAGQjIOKMbHskSgo92glg7xt4GyYwwdgiELIZETLDqC-0GDCKC8GWjaQugcEGIC3BP7kAOuU2MbhN20gCtMAK0QrmRVgDoBRuZneSBZ2yaChbyGQM8C3BoDncR2vHMbDlzy5yh1hJ_PwCLimyZDkI2QoULkMfDZsNCPvW9NYNBaRDrBQQ-wQ82hh3CCWkQGIY8Lr7Xc9ut6GRs8P8H3Ds4ngkIZ8KWCWDAhgI2ITczl63oMWUEMEYbAeFeCnh8ImYO8KRGfDoRIuDRnCJeEoM0RwI3SO6hRH4jzu2bQrqaHQA6hUARrEzgsO87LD9Aawhztyi2EA1qGuwtLg3CmEmcjh-g04UYMfAR8AApK-E5FZDAuGQvQvUP5ECA8h7KLNqwBGCiim-1YVEP-2fz6BQWEobYHUOOENDtIao8QhqKCQjNRWWiKaq9RmaGMZWIg2gQqzjqSAlWv9KQaqwAbqs2BqQhROkLGy5MnWBTR7iUXaAlNOw5TFURYB8bbAp27jcoWeVgYkCzRW6G2sjVno_UrR0rOZrK1EH2j6aFjKxi6LFpXQoIdbbZuIO3T5Ii6QoA5kCUAYpDAWpzSbCZ3iAapJa53LzlT0eaRDec6AfVESz-FTh9R4wJTNyl6CyjFCcoOke2IgbJU-W7QTxu3HNDNcwm3KO5pAP55f8LA6gPIDEESRt4XUcoNsVDxXAlNUAbvayGuO65r1nQ-XDYaI0U4adcWWDG4b2LkY0taG64tTnp3TZvjsmqbDwNsBeDm0ZgW1RBJTwHHtBDRfhMMC-G5QEBZgwEwuKBJUIGjWOkE_QFZ2ja5c2R14k_pd0oCniTOK46hrhJP4Ris4LcOhCZ2jGLj3xOIbsXgGIZZsRRaXKppfFpGCMnxmnD8Vg3vG6dtOCjTieo1JbMTmmX8NRti34mFcMEvTWRiSzh56QGGcEDSDqxXCETtIUyQvkDGPH4T2g6k-Pi-IUb5Dg-D4yhumzj5f8GG-wJAQNhqE6iuRyE9UZjDQkdj_BgfWyNBy4DVDvAkqMoRUOqAn84AUQViQNlUmx8jJR4tANpLMnzDxJokuUOeOMkzgNG7QeKWGJyYZA_RFE3VrACwBjUugS0agJ50fjNoVo8Y3gWK2toI1-aJNFeujQpBpjqBjVO0QoMDgtSJBzo22IkLdHJCPRdYtIQ2OsnajdRGAeyUaMclBJnJU4bCdymjERjbmMfPnvH0skycdhzI3iQUB4kCNFOOnTaY-NeEccBJskkXmSwSFlVypSY6qWjUkDk1KaQgm0TQNMbLNHRbUtZh1NdGHNupwDXqV6P6krhLBxDNyZ8yW6_TIhQI87gUOil3jcGz4mKdggOmKcOJCUlIPpxaH5A_-8oLoWwBvGmiypWic6ZIEFq3SMxtoh6fQLzGvTmBSQ-xrWKcb1iwGJnOTtDMhl8NReek9iXtOsisytp_ExGcjO97UJqmA2dFlDLhl8TYpIspBuzMZlYNeZXTahE-MFlsyUGqLJpjVShkKymZysk6WMz4EVSiazNRWpLXqnCD7p8rZqRYydEvSqxHArKj1Jpl9S6ZA2JsWshbGednOPnaadOO0jUTqeKICOOAimlHiUWUs9acLMRnbTbxu0pWcHMSlCSVRpA8ZnjMFqGyD6iQI2XdMakkzSxrUhgZIPJlCJKZS6amVq1pkuNKJns-aNlLjbZTcpSydofuKKlEASpZfbKcezTJXAUoiMjFjQzCk7SJZUc7uZzNFnUNvxPMr8RpO_5uyp2Ts1AC7P3FuyT-LEzKWtJ4ahzl58jMWYjIRlryZZkkl4PLLXlby-ZyjWEWvI2myzx0MAXJox1z7VyZitcgqfXN6SNy38V8rGeO0ClLze5K85mRm0Hl9zCWv88yVrOLJ4yjaWtSgYPmtFEyTZ9oKCNZmlBzwMIZsQcmFAvKjlbqBY-0GIIdEWymB92BnJFD_jKR4FL-eACcmrA6QhRrnFCex1CEiAsgHyBvCEHZoHtqAVsfkAUAXGLQ_-vQbluQG8YwBcI-HD5BjwS5_IdISXH5DgDsiic2UAPTLM3mrZUKguNCoUBxyECwTaAEYAHlm0wApAmF7gfkKwtQDsLjxKQLhRJB4VvBYgAioRZGD-T_IG-mKOyB3KkVJhJFKUBResBSiMTqF_7WhboM0UmYUoCTXRQGy8WoAFUb0rKuwVHC5c_o-gMJAnEsFdiJg2SMZE4SFDS5OkhiqIH_xlTABCFh0VKNIrkHWL-FgQOxTnnZ4soalqUKqGgEgBeJaAXKCIf4NSV4A_BU4awQOLCJtLnmhsXpY4X6UZBgEYEiCcaOgkjKBAVDcZShMmV-NLBELdoO5KBnVhLBoMtSZQsWVeTShTbXyVUJ94x8hUzCWiT2JOXrAcQCQewBBTSAjS4A7HXYuonzldSqZts4ufbNLmOyAxs89oAePdlTi122kOcc6AXGVyQet8vKWjJxjFTsmm4lECml3HUN_l8wygIsIEAMjVhAclhq0LRmdCD2PQtLqRMvnzgp2goVGXXIu720iptAWtqvJf4bzgZUczif0DkmlTTpuMyqQbUdpBwLaztJqLMxPQwKbZZsp6TnPalWzWBn0u2d9IdmArmcXs8FalP-VTt4V24xIEitdnecT-rKkXgNjVWIqgyiq7AOaEZI6qSVso5Sdv0hX3zAxaZF-UYLfnALxm3tX2u7WvppzoFGc02Y9LJmSqax7y62d6LcblyYxMDOaV-MYndcZhfLTiRBLaEPzm2MaqRYkzsA-4sZFgVkUsmxVAwzl9E5flGuW7QAoANywklV0NiFse2nPECdJJXAVrLWswqRSQ3ZXazypVjJOjXTTox1BVQZd-ldC44ZBXIMxKSC4lxgYwTKljOjgICHWyjsCmC6sdVWvCzcJxzUyQJt3FDbAV1niRSheR6AdqU6XaxILmTQChRXAJIcvB0gByFRj15gWaMpA2JQB2AwWYZP5nvUYkqoleG9a-sUbPqz136h9b3iVJdYH1vKXNuwCmIZBkgUeP-BtGKDxBH1lQQqMePm56p81VyY8U8g5DFB2A2keDX6DlJIa_1eWOaABvA3R0oN7AApRBqxiYRENuZM9ShrolXB0NZ6zDVEovnKkdUDWJrGRsg2mFDo0S62YVHXWuBN1aK1YQVCAxLqN1K60pDP2XXiaCATtWYsZnFwWZQRCm28ksDliZMnoA2URKFmUjRYvo1mXTCJrE23kDMJlZpAQB2jtZKkSmaTaJugiKaCo5mldaJh02pNUonmMbKIgHUCAAA0tpgKgBaZ1KIQrLTns0M5jxbmzTTQG43RaJyL6-9Y5tm4ubby60NTOVlVQtZdMVSJzc9kU1WabAX8R6OaFSg4aoqCQdrNjgGwWAS46mymCXEbqh1O15Gm9aevPXWYih1uFrfupbqQaNk0VdgMMiWBwbWE_gAgFcgC3BbEgh-XrSCn60h0YAzdWukNuPFLAH1426IGhxRAzap1c2hbdyk0L0YVI8cnWcoJUI9r5mIZWxg9jBiYwKN7QAAMSuQcoWoewFZFch-gnSD2oxVjBSglo3trkM8OpJyi_b7tDOfsADsSD_JgdH2oHtFytmiJUYiZJ7cDpSi0s0oH2yHSIgIVoxkOgO4HVMmrauR3tKOhnMWIXgvarIaUenXjsWYM4ZAE1BeIymZSfJvkWKOyFk06lYLodTsI4DTtcj2ARdIuxnfzonKEwMgQO4XTlHe0U6o4f2gXbCHh006zwGuzXRLpiVS7BdSYYHWeB0iG7DdlOicvSEZjRlgdAPFKPYDPC0sAe2usQlJGFxeIZwwO1yEmDsiuQUo14U3VJCUyZAx0FgHPq9ve1agEm9gf5H43b6h7QdtLW3X4yTDaQQdrkOyPYBH7VgFecoFPVqG91-Mre2es8AD1cj_IE9zCP3tnq1B2QzwEen7cwlpbJ77ASYewADy-1-MEmyemvZrod3MIAeye8PWeC1Bng693inSJ3tF1TJXItLPxilBD1vaEmrkXPWeBn0x6Xt9gKZHbqn0z6k92e68DpGvAA9rwI-6sGlE70A8tQQ-33cwgb7J7XICTY3Vfu8UV7Xt5AOyDAB0hgBLO_aVtVojJk3bZWJ-E4KbE7gTBPcfuHIILgaiJAaAfgHwDYAQkFwYgM4F5e9PsYpYnoKWHGV6VWbubFNTtKBUKuDJFUjmomdYLI2GBXjNGzCIsQhWwRE95J1BhPrMAiDMygeDBsg9dDgDbAWD7c_5KEsK69lm0PrIQCURSgA9N-SjXzaLCijbBYYCsagA1IYCdJ-AWHI8PwCuD8AfgxYaoBkFNVYBvQ19EKOsH4BXzlo6h21iAHEU4AdIRh6sPwHKAgl3aF5cw_wChj5Bfw0IfQx4cwBkhKAiQXMHkAKBAVzQWhv4KWFsMWB-AUQNAC4ZUBGIFYERiwz4YbYSR665hgbPYZkixGuhZcRI5EcECahsjWQOiiAG5T8AqKNsIo7QBKNlGQAKC4cqDQHaMgkAFhgAHo-LrDOAAHnkYsNjr_AeAKo7kdKMrh-AWBS0JEEGMlGrU4aTRGEdwC6BIAKQeQxomNnBlVIIAYWgWloDqHNDoJN_GaHNCzAZg_AeQAoCbxAA`} mdxType=\"Playground\">\n  <Bage primary mdxType=\"Bage\">A bage</Bage>\n  <Bage secondary color=\"paper\" mdxType=\"Bage\">\n    A bage\n  </Bage>\n  <Bage success mdxType=\"Bage\">A bage</Bage>\n    </Playground>\n    <h3 {...{\n      \"id\": \"fitting-bages-together\"\n    }}>{`Fitting bages together`}</h3>\n    <Playground __position={2} __code={'<Bage primary fitRight hardRight>\\n  A bage\\n</Bage>\\n<Bage color12 fitAll hard>\\n  A bage\\n</Bage>\\n<Bage warning fitLeft hardLeft>\\n  A bage\\n</Bage>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Bage,\n      RawBage\n    }} __codesandbox={``} mdxType=\"Playground\">\n  <Bage primary fitRight hardRight mdxType=\"Bage\">\n    A bage\n  </Bage>\n  <Bage color12 fitAll hard mdxType=\"Bage\">\n    A bage\n  </Bage>\n  <Bage warning fitLeft hardLeft mdxType=\"Bage\">\n    A bage\n  </Bage>\n    </Playground>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Paper from '../Paper';\nimport withStyle from '../../Theme/withStyle';\n\nconst Bage = ({ fitAll, fitLeft, fitRight, ...rest }) => (\n  <Paper rounded overline nowrap {...rest} />\n);\n\nBage.displayName = 'Bage';\nBage.propTypes = {\n  /** Reset Margins */\n  fitAll: PropTypes.bool,\n  /** Reset Left Margin */\n  fitLeft: PropTypes.bool,\n  /** Reset Right Margin */\n  fitRight: PropTypes.bool,\n};\nBage.defaultProps = {\n  fitAll: false,\n  fitLeft: false,\n  fitRight: false,\n};\n\nexport const RawBage = Bage;\n\nexport default withStyle(Bage);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Atom from '../Atom';\nimport withStyle from '../../Theme/withStyle';\n\nconst getFontProps = (color, getColor, rest) => {\n  const nextCss = { ...rest.css, color: getColor(color) };\n  return { ...rest, css: nextCss };\n};\n\nconst Font = ({ children, getColor, color, ...rest }) => (\n  <Atom element=\"span\" {...getFontProps(color, getColor, rest)}>\n    {children}\n  </Atom>\n);\n\nFont.displayName = 'Font';\nFont.propTypes = {\n  children: PropTypes.node,\n  color: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  getColor: PropTypes.func.isRequired,\n};\nFont.defaultProps = {\n  children: null,\n  color: '',\n};\n\nexport default withStyle(Font);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Font from '../Font';\nimport withStyle from '../../Theme/withStyle';\n\nconst modifyProps = ({ css, rize, size, theme, ...props }) => {\n  const nextCss = {};\n  if (rize) {\n    const blur = Math.max(rize ** 3, 5);\n    Object.assign(nextCss, {\n      boxShadow: `\n        0px ${rize}px ${blur}px 0px rgba(0, 0, 0, 0.2),\n        0px ${rize * 2}px ${blur / 2}px 0px rgba(0, 0, 0, 0.14),\n        0px ${rize * 3}px ${blur / rize}1px ${-rize / 2}px rgba(0, 0, 0, 0.12)\n      `,\n    });\n  }\n  if (size) {\n    const cssSize = `${size}px`;\n    Object.assign(nextCss, { width: cssSize, height: cssSize });\n  }\n  return { element: 'div', ...props, css: { ...nextCss, ...css } };\n};\n\nconst Paper = props => <Font {...modifyProps(props)} />;\n\nPaper.displayName = 'Paper';\nPaper.propTypes = {\n  rize: PropTypes.number,\n  size: PropTypes.number,\n};\nPaper.defaultProps = {\n  rize: 0,\n  size: 0,\n};\n\nexport default withStyle(Paper);\n"],"sourceRoot":""}