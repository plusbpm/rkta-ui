{"version":3,"sources":["webpack:///./src/Theme/defaultRenderrer.jsx","webpack:///./src/Theme/withStyle.jsx","webpack:///./src/util/invariant.js","webpack:///./src/atoms/Atom/index.jsx","webpack:///./src/atoms/Bage/Bage.mdx","webpack:///./src/atoms/Bage/index.jsx","webpack:///./src/atoms/Font/index.jsx","webpack:///./src/atoms/Paper/index.jsx"],"names":["defaultRenderrer","Component","_ref","href","rest","_objectWithoutProperties","react_default","a","createElement","Object","assign","element","pickProps","context","props","elementName","ref","theme","children","withStyle_objectWithoutProperties","_context$theme$elemen","defaultStyle","styles","_Object$keys$reduce","keys","reduce","acc","key","value","nextStyle","nextProps","_defineProperty","_objectSpread","css","modifyStyles","withStyle","Element","displayName","WithStyle","forwardRef","Context","Consumer","_ref2","modifyElement","providerIsMissing","condition","message","Error","invariant","contextType","concat","Atom","atomRef","getColor","location","changeTheme","touchDetected","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","defaultProps","RawAtom","MDXContent","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","_this$props","components","react__WEBPACK_IMPORTED_MODULE_0___default","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName","className","docz__WEBPACK_IMPORTED_MODULE_2__","of","RawBage","__codesandbox","__position","__code","__scope","Bage","___WEBPACK_IMPORTED_MODULE_3__","primary","secondary","color","success","fitRight","hardRight","color12","fitAll","hard","warning","fitLeft","hardLeft","_Paper__WEBPACK_IMPORTED_MODULE_1__","rounded","overline","nowrap","Font","_Atom__WEBPACK_IMPORTED_MODULE_1__","nextCss","getFontProps","Paper","_Font__WEBPACK_IMPORTED_MODULE_1__","rize","size","blur","Math","max","pow","boxShadow","cssSize","width","height","modifyProps"],"mappings":"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","file":"static/js/atoms-bage-bage.b365d6b3.js","sourcesContent":["import React from 'react';\n\nconst defaultRenderrer = (Component, { href, ...rest }) => {\n  if (href) return <Component {...rest} element=\"a\" href={href} />;\n  return <Component {...rest} />;\n};\n\nexport default defaultRenderrer;\n","import React, { forwardRef } from 'react';\n\nimport Context from './Context';\nimport defaultRenderrer from './defaultRenderrer';\nimport invariant from '../util/invariant';\n\nconst modifyStyles = (context, { children, ...props }, element, ref) => {\n  const { defaultStyle, ...styles } = context.theme[element];\n  const { nextStyle, nextProps } = Object.keys(props).reduce(\n    (acc, key) => {\n      const value = props[key];\n      if (value === true && key in styles) Object.assign(acc.nextStyle, styles[key]);\n      else if (!(key in styles)) Object.assign(acc.nextProps, { [key]: value });\n      return acc;\n    },\n    {\n      nextProps: {},\n      nextStyle: { ...defaultStyle },\n    },\n  );\n  const css = { ...nextStyle, ...props.css };\n  return { ...nextProps, ...context, children, css, ref };\n};\n\nconst pickProps = (context, props, elementName, ref) => {\n  if (elementName in context.theme) return modifyStyles(context, props, elementName, ref);\n  return { ...props, ...context, ref };\n};\n\nconst withStyle = (Element, key) => {\n  const { displayName } = Element;\n  const WithStyle = forwardRef((props, ref) => (\n    <Context.Consumer>\n      {({ modifyElement, providerIsMissing, ...context }) => {\n        invariant(!providerIsMissing, 'Please use the Provider');\n        const render = modifyElement || defaultRenderrer;\n        return render(Element, pickProps(context, props, key || displayName, ref));\n      }}\n    </Context.Consumer>\n  ));\n  WithStyle.contextType = Context;\n  WithStyle.displayName = displayName;\n  Element.displayName = `Styled ${displayName}`; // eslint-disable-line no-param-reassign\n  return WithStyle;\n};\n\nexport default withStyle;\n","export default (condition, message) => {\n  if (!condition) throw new Error(message);\n};\n","/** @jsx jsx */\nimport PropTypes from 'prop-types';\nimport { jsx } from '@emotion/core';\n\nconst Atom = ({\n  css,\n  element: Element,\n  getColor, // eslint-disable-line react/prop-types\n  location, // eslint-disable-line react/prop-types\n  theme, // eslint-disable-line react/prop-types\n  changeTheme, // eslint-disable-line react/prop-types\n  atomRef,\n  touchDetected, // eslint-disable-line react/prop-types\n  ...rest\n}) => <Element {...rest} css={css} ref={atomRef} />;\n\nAtom.propTypes = {\n  atomRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({})]),\n  css: PropTypes.oneOfType([PropTypes.shape({}), PropTypes.func]),\n  element: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n};\n\nAtom.defaultProps = {\n  atomRef: null,\n  css: null,\n  element: 'div',\n};\nAtom.displayName = 'Atom';\n\nexport const RawAtom = Atom;\n\nexport default Atom;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport Bage, { RawBage } from './';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"bage\"}}>{`Bage`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`import { Bage } from 'rkta-ui';\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Bage is a preconfigured sheet of paper, which can be used in different ways.\nUnlike it's done in Material UI R•K•T•A Bages are not opinionated about their positions.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"composition\"}}>{`Composition`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Bage `}{`←`}\n<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/src-atoms-paper-paper\"}}>{`Paper`}</MDXTag>{` `}{`←`}\n<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/src-atoms-paper-paper\"}}>{`Font`}</MDXTag>{` `}{`←`}\n<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/src-atoms-atom-atom\"}}>{`Atom`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"props\"}}>{`Props`}</MDXTag>\n<PropsTable of={RawBage} />\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"basic-example\"}}>{`Basic example`}</MDXTag>\n<Playground __codesandbox={``} __position={1} __code={'<Bage primary>A bage</Bage>\\n<Bage secondary color=\\\"paper\\\">\\n  A bage\\n</Bage>\\n<Bage success>A bage</Bage>'} __scope={{props: this ? this.props : props,Bage,RawBage}}>\n  <Bage primary>A bage</Bage>\n  <Bage secondary color=\"paper\">\n    A bage\n  </Bage>\n  <Bage success>A bage</Bage>\n</Playground>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"fitting-bages-together\"}}>{`Fitting bages together`}</MDXTag>\n<Playground __codesandbox={`N4IgZglgNgpgziAXKCA7AJjAHgOgBYAuAtlEqAMYD2qBMNSIAPOhAG4AEE6AvADogAnSpQL8AfIwD0LVmJABfADQg0mXACsEyEFRp0CDSQCojvVO3YAVPBDjsAwpUwBlAIYYARpSzs8rux4wdOyuAK4ElESuBBDkrlBQAJ7sAOZ0MALRMOjsoXBoKWYWAAZUmHDu6F5YGcU47ACSYOyJlKEA5AIw7OShAhBtdniUAO7sBH4Evq4ADjPp6IotbT3uRT14MOQA1uxtU20C7OiU5EMZMIi-BAQzcIiSkikQE6EeOFREkqiUrGiJkjK8Eq1QyZnWTWWoXY2Hm_To5G67mScAIAlCKRSsDsIxeeHGNjsFU83iWM1g_m6mVsSPMtjgoRg62oqTxb3qiAAlGYjJIzBAiDNKAIpgAlGCuchTMBCIjsToSqXtADc_MFwrFioIABEAPIAWXYMsi8q6koIAFoTkQVWqhSKHJEhah9EbZfKcJJsK5BbBbagzOLzXr9TguhgMgAKdbMNhidYWRh4ADMYkc6pdNE46pF2XYuImPScwJJNQEiCkKfj5gs7EYMzEkYaUyiyRdedc6BYMWo8XYMyEd3GlFSMCmL3Y4cw_VQKXzMASnKkDYTdfTztdkmriekccUZhOvSI-hwaQIAFFYMeaAAhRINdCRzrCAjtbmoTnKhTKb2-mA4TQyB0ahaHoRAVBzKYb1cNIlmAdhRVcEZoLSdh5DdE12k9OABHISRokiOBJBQmB_QFe1NXNDC5QVc12jtDV2HgzQfHQ40aIAARgIgRAGVBAWFUjwVQXRUWOU4AC9nAIRJsXYbgmPWKIBGeVArnaAAGdhkxmLB2n3GsZk7FhZ3UgAWXT2AANl0_T1jAECADEfWgRJ1P4ZxDkRR1MHYAAFIR-CWHifjgIzETsmsHJoZwIAky52AARjMgz5GE0SpgAQTmeT2EjeDyBsKB0HDNDOXksQ8pjGR2FRWSYG4YBDykmTsXkbda2AQroBK4IADI-vGRJ5koZpuuK0ruCm-UwFCESe1Qdp2AAfg2Hrw0jcqrnG3rUDSmspBkat3zMWFGMwMAwigKZNoqqqDuylca0TIMpRwRzMhSa8CA62s6xI_t-mU5JIAIUUIBSQhpgEdBwchn7Vz-zL2A8GCmWe2spBI37MYBqgoGFRKACYjReTKEmh9AcaRlG0cRutiLR6n_rR_NXAEVAClJggABkYDAKY_BhvmBeZixkdRtJ6axpnVykV6CHez7vo6qRHuOsxvxAHC8IIogiJIyRVGwAC4CwIDdFAgxwPIxiFeo00tTIyD_MHSxhvgB32gHSgZgtGT5jgf0GIdPzZgyL2cE9MO4Wdij8zxaT6sjz0o8kaxuJgSQCzwJO_VVAMROoMSAYU_LufJqAllBkWCGrl44cIJYo7DeApnkcruEq6MDpjiOhDmzAcl-DIoDQbofhGTIZiYluulRdCtzMT9hJInAWDCqBXESAA5H1ugU9oSP9NefZmd3A9y4B1mMIwEPgMd2H1dnVLsXl7LJhIrgC32L_gHAvCUCrjfEw984CP1rk_F-aB2Dvyii8Wu383YezgAA4QwCay3zAY_RuUxn4qRgXAiwoNcFIN_igtBQDUoFzXhdK6BAf5DgUtfeBBBK5XEulAcBBliEIP5gQDh8RuEfzBhDQggiuEwGocJM6DoMoISQqXdgJEC6nSwPHOhoRroJwmHnGAkYSIr1QFrHW-EIj60kH3AQRsIwaDNhbEC-gGC2wdPbdijs6IFxcVMRhf87DuO9oOf2KDg6cxdo5ECKdJARJoHHRiOc9FRLThnY82dE6tVIqoouqAxI8RYGARIjC7BlwKnAOASx-jxSWPkKpBJM7NyjmfOwHc7osIsPIl0WACD2DKVfeQBcLAQGaJGSpMByptNrPIjwUA-i5WfhMHAUQsAjLit0UByYlgAFYjF_V1B4dQWxFb-HyCkVAkZOndLKXBem1RnB-BOCMK4xR6YWA0pZAAJMAUZ8gPnAGmX0H5Pg3k-BUqjSMGklgQvYFCjSOAiach4X9WswL2CfNGbA9gRNAWor-TMo4khMXYpRaC1w4LIXkuhTgZKCKXnQt-eiu-yZsWfP-fiycqz5CJV-RadFBKsWWRJWS6FFLYXE3fEi9gxREUWA7gMtC6whl5RqWMxSGN5FnDgLFeKuViifOVYC4ocqLB7IOW9Y5EMzkXJ6eUpiCd0ATG2mUrVUjfAwDEQInoTrVllTlftCwXQCB9HMPBBcmcaDqRkPpdgLcmlLA1VceCLcrVXOjVHDVaE0IF36elYuPjw5HAUk0u6jAYlTGAC3PJQzCmDjgJGJpnJF5iCyVY9ethyTbz3seXK7QrH-hbWfPxV91ijLIefChqBQhEECAIRFyrR1-JwBOqdGRpGoBbZo66RSh01hHcK9Yc6917SybIqYG6pgJIyZGKxRiTG4XTpsVJF76qm3NtoS2TibYuwVnBI0woRjs1hvzDNASzRKiyd4x0egumR0kI4KDr4vEuzPeKCMAguhHACZ6ZDdBpzobiQ6NArB2YQHcNKd0WFPThGgDYoj_RSOhPkZWgpejil5XfV0n9O1wwNJwEWpQMIrz6AqfzTulUJnyPgmevRPG6pyXQgpdjisJiZwANqhu-gAXTlRJ9gFzpO6ewAwmtGaFImsOTgbYMBEi1vra3dAoREQ9z-pGSU5AliWcSKJ1VEr5FEZmQfQGvs4AqY81p-mirIx-cZPJaaaJosDXYB5zg5hZPwHKmZs1ZSLUufIOQRdhn9OpeC6FnZSKFzgM4MMgAhJGJLMCiucnS_s8z5rTk5byxcopP6QtWY01cKL3RZX0wDUGkIuWjVoWld5pFnWa0JqUPTPTGSE2pvXvzehiSFsYy2xYUr6renMNW0t-qPGmkfF6dmndY5RuJqjrNoLPHFNxqKrtONKaujNEu5dsw8iZixG2FusuT3At3CWOp_QnaXUfa8xMiL4OaCQ-S0WeDOBlPHnKiNjm7AmOJBY5GYHsaBNhoIJD4TYBSuY-DatwnLdgcfczWYb72SxJPtgLlSMl5ifuaszD9YOmN7tt3vvEz7BOffW07m9gAB1dJycFIOQEP-mG4owCRjrTWsnXmnOYzg7QLpOA4MMmPAIZmwBy447F0JwLfxpwNDgPqekBRHuOOgy0ru02JWEeI6RyMVWfY24yHbh3WXZxLB7RSCreRujKddr8LgGQ3wTb-vIqcEcFIW8E1mAAPln4462tFgxwxkdDSfayU8nEXgQHPM9137P9op-OXe18J0lnPxw21byF8eTXpW_ryD9ZjWDTeDfF0nRkDqjW5Uy90Rkj4Te_65V14ZqfsvYCts3h24XCkBed8h3Ky3NB1-C8RwpYoeicifJ35v488hDXsEeDCOAY8aBWlsK4aZMALTP4npQC0RlMhEA8oShZanLDrXZY7T65wZJZrHrqLnT57aKs4wAFy3q6zmJESlo2JqAvoOJ6BgQQTxxuLkagYIYhw-LIKXwBJnzBKByhIQaZTmJRIMGRD4bnqr7dCYapyegpJZxIEMaS5nilqA5sZALChLBniOAEwzoV6oi841gdKGbWpXyrbzyKwapxqiHlijjdKaGN5SHlSXb-rgFU5zxtxvb3AGZdJKFfZZLyKlrs4FQvbcbaGSFiFFhSE8aqFlR3Ta6MDMFyjw4EB8DaxGQBggCzxRyCEgQN74xuESGaHCayHtSrhdROF0AD5qzmLHRZKlpH675b7yilr-i5EDooLbrtJpFqSx5jqByLrFiIqxFaG-IULUAwC6hgB_yRgqbNG1GogzgpBLA9H_xLrToaY0o1jxFSHzoUKzQiQ4C2DigACOoQEAXQiwjOBcuRZ6wh4mlRVwE6CQDRmh6kkUTOJ6eel0BeOiUB9UkYpaN6Sg2sd6PBQ-KOgEb6ji-BEGBUZotAS-ruXsJBrBFx9CPBMGZ6PBoS5xZ6PQvxMA_xBA-U6w_u8eAgQejupk4w6IUiSkTgVaB-HqBxGCFgaOCUEJD6OJ8hfgs4MAPBt0wAO2Lhuh4yW2Q2xijxpiLx2GqG6GOBHxeB1sBBdsWogJTsthku3JuGaeeU64rRNAP6eAH2nhbc3h7usOwyipImFegaWOjAspmYZaphC8RO30wRrg_AvgH2jUmpYAjacq5eepTocphpUcqhdpGxMicBDoMJkpxeGQKBHJd6VGUANG3uh-7xFAnxgp0JCBN0ug3YfEwU8AFQaQchgy1W8ZLwfE5UEwQgYwLoYw54aGwokYx4ZSaMRil2qBZihEkg_hWBJsLEuBVshgoCHELE7AHZcCEGQx_i5G1BAc8AwJzEZswG5GXEPEC0AkXQ_BOSWUjBJSfOVy6wgRVwBJiKkxbhD-8Az-loG87-sAX-48Fe5okgA5KC6wBMcQC0Sw25T-aAe5b-H-R5LoJ5UoZ5QSg5cA6wpJt5BKO5D5r-FQz53-b5BAH5vsNB8AfO1JaQPBf5j-u5QFB5n-oFJBEFfsX56wesKuiKRpoge0XmjABJERrcxpGqjUGq6EVpwAOF_M7phc_hvGFBnszC2F5iKu0xtRrR7RnR3RLFqCsxbm1RC6cAfg8w-UHcYxDRZSXF_8Yl4ckl4xFgq5IlLRLovFHsXRvZOAgRgxAlOAfRBQ0lHpjF5ia2lxm6xmbFNYdFYA-xWixJnqFhRJiKql7Qkaq6TFV-XeAW7Q_hUJXpUw8iiEIw_huU_hsBGisZ7AkVmsgZeEXJsZPBfJkZApziLsmUXYLInBNZFiWVJw_EqWwJAMuVesBsaMkgxViG8c2obAqJUS5VkgdVAe1i1VZB7A9hZV6B0SIEVVGSwJAAEhKNOI1T1cNZ2BkP1fVMCVYmNbWVYtNfnB1c4KwHON1bWatSkEtZksJBBjeOEBEOYLlTxLAL0NiMRIddQDtcCQ0KgDMOENBBVidUAlsFovAJIHdQ9eBU9VnO1WEvHF9eELqOEKBS9Wde9UREDeBSDQQN_jdTVYxDzLYGRphGnKdW9RdcjaiAjR1djQQM2NxFEhjedR9fjZ9bQF8P9RBvjYTUQDeE4CDORuja9aTUROTXTcRIzbjQDYxM4H9qgC6BhszZ6CTZDZIPzWgELTzRBpYO_n2WjaLazeLXLR4ERKragv9R1eDHMGzrlWAFgJIDreSH9QNYjXInCfqNkCRgAIqMjwgK00RpzBmAiW3W2uB20ZAQBDngYux3z-DuHCiO0egCRSGBXRWWVlp86aHlJKTu2e0O3bRu0sAe323e21rjHrAFXUCIokSIotWomIqlqIoTXTiIpWKIpbUGTrAHU3A50Qj3WPWUiIrQ2w3f6Ir40d0o101d2oh00M3oCJCV0C1C2Ioa3V01jG2wCrrVlNXZ1FWz4RnATpWfrxzpq5XO0xAhkarh3wGR3OVIk1hSbLYe7t4b5uTyjTKnDbCRR_RGRdgFAM111EBXAQqrj30mQpCWC-yv1TYf0FCILyiJQ2R6R_3GQFCkJAMgO32TYiLsKn3_2zhP3mK_3v3gOzjf0zCoMYyIMpCANv04PoMpCQMEMyqIo1z8Ira4P4OwOsKQPwS4MkO0Nsmz09WGypamzNkfpClyK9Ib2UZb2AhlK73ekxUaqH0WDH31QJqrg-XqRoDf4WhX07AwMWDKSqTqRaQ4DJjYCqP9hEOaOrBQDkCRg4BmQAAc2A7AAA1OwBZFgJyHo6wBkDEHEFAOTBaupEQFwOgH6IioyaDPAxMmo9AlUaQ7Q7wrzJQ6feo2gPg_4-Qw3O6jIxjLE6gCQwk4zg8coKYk1QXdODtZw_yS2avYxOvSLZIJvdRjvebWWu3q1WOYrZU9wRSaHcKCI6emI2UhIyCQXnoik39F4DDBkJo3o5sMk_KBpHo0M9OJg08lyj4HAEAlwDijIKibfpk0fSILQOgCtjMxkP0_KCcDcNkEtIyajOAt_gM7WGk9g3fUQ3M4evcw_bOPE2gy8ykMg5EHc7WIwxM-E4yWgOAh6vBGk4A-0AAOxEy2QRPJZ_D5Af4rbwsQAeDQAvAX3tA2Bdh0BnOpTZNPFoG1mYEcNL3vpfEuzlNNNVPb3CNRV730IH0TJSOwDXPEJOQuRJDuQgBuDmAfTuDkC2BUBBTsD8DDVQDOOuOuDsA7wwCMjCv8CiiUBeARDyvcswApCUDdAACqDQwrxIcAFo4C_QYAej0UBAzq6kwDtkU2ZrUubq8M5kGkUzU2sAJzAg_NkoBQmjVKmy1rq43-w1Ez7QRM9jejeuheqGXr8ovsMQ3j8UfMzwqLY8MkYbhm2oWwwo0QfE6kPwLoMDjJRrQyrLv6NAzk3jnL8o_Afknel0qx7AdV59wrDNlA2wUQqAgx8QWbPwSwAA4jAMKM8K4NUl7Sa5s2o9QJQGFJKAlMEyWwQGW65IgPTPRCADzA5lwFKzy3YH_FPC8GCCAEsPwGuwK-gFK4bq9aq-e1vN-QeyKyAJlBgPEN0PqBO6qy-6gJKJQJe4cN7UcDKyMMK44H0L-8FBO1OxFJs-sKEHMBkHEOAsW-G5YJkDkgri_fKNB3CHB6RC62OLQO6-FFG5pDgBC766A-sOc5SFczE6Ez8xYLg182h-E3Rw8z_U8780Q284Qx8xk-R4ikQOENkMW77J6zJN62ZHo1Hu66GlKDm60fmw0foCM6feGx46cupIiHoAIPJyuQQIVIJ8pwVvcqMIYws5OCkGCkTJspsksJZ9Z5ilZ5CnCmZI42O7ppO9JyC7kEa84B57J3m7C5PNPMWyMDYLQB64iLJ1PLMKm10rqM4wIGAATI8vKAuGPHcLYHoyPAl0l-pFi5gItK51F1g6fVl4l6MFLkF5fWaNsBaCMMKOgHo3VzDBV7MOpB4NV7V_V9pzWHgMNJsDkitr1zMP1xYe0GEBELiz-YZoA7Oyp2PGp_KLAALN1zfASsqusHgIlMW2axa_KAAJzQM2sgR2tBvzeEAJ4uvjyBsOv7eHf-u4cHMEeYntAWiJQ4CkfdcWB4BEzbcgS7ftBWTAqmvHf2viKLfuoXf-tXeg8eoA9A84duvheEcWiwofeucpi_cxSrLmTmN-sYy2sw-OvOtQ8ujXdg_tAWN49kMbdmSY_mvY_yjJihtHc0Anc3cU9Ot6MBuE_yhmTw_3eI9PcpDeuWdU-wt4CbJ0__chti9sus888c_E8Yzc9BvJjQtkc1iMl4BWRS8M_Bvq_A_y9BubKc-Xek8K9q-y_sCut4dI_Peipo-8f7pvAxBw0wBben07d69Wsa9_Qq_s8y---1gE9Bt89K9-8Pf4eev28-ti8Fsu8vCwA_ee9_fe_M8k8wBk-w9Ez8_48g_G-m8C-29C_esLOfcoyM3J-zte_xSWvp_K_Q9Bs59W8h_s9h9c-R92_C-TNUpx-IoeBXVVHV-p-19AP19--N8B-59_St_k8m_h-1g2-PfR_d9Edl-udxAzALS6-j_tDExW_-_k_N9B9y8EBs_k_t8I_F8r9id9_MjxdUfD9Y-7-JTT-L-T9H9v-n_n-w-X9F_L8Ctnu6_J3oRQDI5M70TVUulNRJZaA0qJTHhsFT4YVNqWQjIOHS1Eb71xGTLWMocwZJ4swBBLPKkREWowCuG5LNekgKpYCNqmtLDqv7TsCNFg6FGZpvekzhtMtO4pOcraiMhwgRcjAzgWJAHgYBHAHMDIKxkyAsA8gPhCZPswEAMda4iESQRYQkEQA8g_ferhkAY64JFBqg5QZ2F0HqDhmAgTBgoP0F5ArgKgtQesFkGYNtBZgvQUoPwGekI6DLLAesGZYztVwc8NoMIOFBC1a07QHSHpGUq1hbkcUQjrIKUbeBpmkobYCkCEHoBXCWhHgSunfqTssy1AdSF0C3gxBnG5fcgGlxWylccu8oPLji1hb7kP8uzErgR1E499xOf9SgA-QyDnhnGNAUbrm2w6rhJOPnM6rD06Hl8hY1Q27GGB8GJC_BYgp8FMwMKIohhDHPZhoLkHbNIgpgpQaMyWCyCtB7qHQeYMmaTceuAGGbhXyMHyD-EOw0bs62OGzNfYqw3QaM3F4AZHm8EGwTcLOH2D1hVwjILYO2HvC9hDw5XBM2eGLCth8Mc4R8JeEzA7Bawv4YyTNDoBdQqACtrOyFDNCBArQ_QB0Lk5TYehvneUAMNc4JDi23gweCIP8FPgTeAAUjfAEixh-nWdsSN8GiCBAAQ4mE61YAjBqRIAkkshynbhhPOqMHYPELGFJD1IaIdwLyP0D7CWGCVIgRLTWqFNSWUZDKhQKYFpwUBNTZwfSyuJuCj6OAk-rO3i6St3G83Kou0G8Zdg_GXIlGFeW2DFs5Gl9G0d12lHgC8IYtC6rXSOoKjYBy9eARBkpZO0uCkgF2hqN5oOh4I4bRpgGJYEvFGiHTXptoh1GSM9R0jU-vEAtR01RuGnPDtM0WEy57UeAWjp8IEAijxghmKbL0GZHCh1IKIzTno3tHtAFG48C0Il10ZTZxmbfXHif07J5AYgBSJfOGnlBZjIeqTNAFnxx5W99gVHdoPiPeaf1HmTHfRh83mFsdmOHzcFj7z0Z_N2eG41zuN0oBjjT67Y8nnuPL7KNtgfMZxlADtEd5t46kFsV2NxD5jLWTrKka50CZfwEGRDZcQuNwbziwGa46Jj-KIY8dNeiTKJgLCoYcdAJsLEhICMXGf0mGjJLeCpE8EYwjxsPTZHdxHGoADx7QTCVb2obRNAhBvf8QhNV4kSrRk48eMWwFFxDCR8oMUTkn_ySipssg9SOr1qjLMGurE7wFqgiGLCohQfAtlEA_Gzt0J6kS3l2O8Y4SLeFErjp_XBadjNxwEoNkpNc6GjYg8QbbrACwB1UugUobNoOKASToCuIA50YQLdEfVoajMcBF6LIGCk_RlAqMWqOoE0s0BmojAa4O6bYDI6uA1cLRKFGDxRRPI5ibEh4lGC_OXQjGPWLPFjMFelPLsVRJdCRTlJHzP8bOIAaATSJj9ZYYx2ymzgQJ1PUAfFRdGSBLJUNRujDVBrjw7JxTbho5NVGBj1RtAwuDGUwHeT3ByYllqfTYlANLISzMeNxP8mLCwRjPAiSx2K5ASAJEElcfBJynP1CxW4sHj-PSHb9HYOQtgFFKKnmTTE5UyQOTVIF1TyBZTJyR6EDHBiWpaiFwdqI6m6jfJ-o1cLc1mm_jWOFPcaUuNynmR3pCkrKRlIKn_M3xn8K8Z-LSmscppP0maeDPmkoNnpKkm7gCzAnLjkRX4z6WxwCYvAnhf0r-mDM2Y7S70e0jmpTVqlwD6pFLU6cwJclBjBGIYq6VqITG3Skx90lMbOzTGnIMx6nRTlpymz1j7xXPFGnoj_gpSpsT0qGRgxxlYzOOzzT-t-PynEMAZZk_FrtOVpY0UaFNbiFzUHrEyfRpMlUUkiamuTUBcYmEomPjHmsHp0Um8Ri15k2sdJekw5IZPaD4wTJprHST2zzJXBEossx5nvzklSzoZ3zIBr7PY7TTYeO4rGZAz35YSip7STmcW1ZmoB2Zg4zmeX3fHAzkZoMyabLMlnBzpZqM0WXLPhmAyCASMrGTLKtGgxMZ8kgoOlNAlgF4u8HT3rbNWL2zMhRkmZEQFQBAF65W02FnABElpysZ3s8fjnP9loc3pXYwiTNMjnfSIGQbMObXOKnslSpe0yWoLWgGL1vRZLByS7HggeYZQ-8ZpF7AnK8RrqVAGcrU2cp6yqZNA9yYXHkRhQYECkPeQAXgDPIawGkCkcpx5GocLBIgLIOCl7whAwkWbagP7AFAFBmxc0Aya3N6CotyASjGABJF_bgp3udnWFBpAc6UorIJHRzolD26lYB8IbT-bN2_nCg0OQgAgP_L25OtMAKQQBe4AFAgLO5sbCBUJTWmwLYgCCpBVGFhRExEoaCnAFZE9mUpkwmCxKAQvWCv8P5X88UT_MnB_zaAkYRKOYxoXqsJFqAQ1B5OCoCExwPnL6PoESRlxZBeYiYNUlWQaF9C0g7CsArWm6pgAD8vaElEEUMC3gnCwINwqryo8RU73JYOIuSyQBOYtAKVNYNzFcBTFISk4blJLGNFDB1wmYNEoSIRLpwtcEse0EYkSiwpSSjILglSXpLQpr4WJQcxPrtABpXAGBrINGl4SP55S3ieEOe6RDqgMDR8Q6lqjmKNuPPZVE4NalBVTZjLTqUzO6ksyTRicx2cnO5mWz5GiIpsdbNXD3i7Z0C00U7I7l6N1APYqtP2Nh5DiuZaQ1EeiPaFCy0h-QNaQqA2l5DXOZ4i8QuGLZCgjlDs-WsZNoBhtxZyvX6RjGVYwyFx_QQuQrIIFKyIaF1DWunHlqGUN59k5USdMaksCLpt82mZ5Jum1ofJG2c2X9B5k6T8hsc0-qstRDrKoyHM2sQSMBGrgsVvYxIBsrvE6SLQOGcvl0G7naTsA8y45XmS7liCe5rJRWXegNpG0IAutU2s-kVEr0EBl8_htfLclGyumCK_pUiuZmyMJlDo6-mGx5EZDTRwnAVjJEpQWM7AwBHuRYBVXotCx4koBi-Ma5hKCxhq6pejzERncQWq4XVXUNFRWRcZ7KvCMGOTq2006_8flb6JdgYcMgjkVYmJACQExT2YlIMTBwEB-rmRpBUMZ00jo3hquNYggKqMkDtcJQ2wBNTCtQBsK-IsJCULQCtop0E6iQUsmgGCiuAsA3OTzNNgizFrzAU0BSESXYAJYlkMWetY5XKht4a1La6FI2sGjNq61umNtRjmMIDqEgcqV1uwGWIZBkg6eGBKtGKDxAoAQCnIDWtq4mqrgnyaSYCk5DFB2A6kBdf6HTJ5Rm1VWaaESXKiTqBA06yVJ8gvWJB0IlQI9WWtXVPicUSyLdZoquw6kqcPWRIH1gnX21kgX2LRb0sjAprXAaapoe0Nyhno41qa9NaJmsHxrINiauzA5n0TtYNhSGh8ksGNgONWkq4eREllMzNY3oHmWtGBog0PlOQhlGwALE2gTYFCXSWDeBr8jIbcoFG9NSplw02MkoYWNVJLh9UCAAA0lZlyiCaI1qIWrDzgY2S5pJ7GrDTQB_V8bk8smstblAuTMaAcbG1aBlkVgDZa0Gm6rqxqo00ahkiJcqBaCSi7qR1UACbOXlnYWAW4rmKbI5rTSurU6U6mtaWvLWJYecLm1bOQHc2FrzkjlbzUsHnVRN_ABAT5IJpE13rigIQv6LTiC0AavNNm8LdEBfaogYtYauLbfkS0M5QJTEPGYlVaaNEimJM_AucV-xAx2YV69oAAGJHImUbUPYDMiOR_Q1WyXAOEYWXrEo3aJrY5HPCYTMonWnpTVt62JASYh8BrS1oO6Wc4x98jNo-0vUDbEoELZKC1rG1r1Jc4CeMnVv60zbNkIbRyM1sW2S4IxM2syMlBu3baymEpeqqNUPiCoIUr25uMA0cboDtFXAlIQWnlBNb7AjkQHfYDu1yJut-aQ7f9ua3Q7RtBcLrT9vzTTb_t54FHajtB3faxIv25MANvPAaRcduO87VwIZC5ZkyA2vbolHsDngIWe3dHcjhZzsxOYs4AbY5GTBWRHIiUG8ITrEiGZMg5RJKOpCa0tbzG9gImDA2T6NbTtVOynTA2TAC7TtjkKyPYAX608odp27UOzpgaS9kde3RyETGl2Iode_27UFZHPDC6OtiKCFgLvsDJh7Ae3NrTA3MYC7TdqOmnYij24C7tQ5jc8NqHPDm7JFGkJ3YDs2SOQIWMDRKB7wl3mNHI6u88GHvF0Nb7AmyKnSHrD2y7_tN4DSDeD243g_dNYZKE7r27agfdnOxFPwrl1e68dJeyRYbsa3kArIMADSGAAaGmVqy0KirdrPwIP4TgnsH4BMCdxec8wCuWqIkBoB-AfANgSGPNxiCzhYVMahlqljuipZflQZQRhxuQ2oJPV3DNqQyxUzrAGGwwZKd2sZLhiUKHqQHlpGP3W9ZgEQYrgdwv2IpJM8AbYDfo9lEwVFsLZiJOmVZCAqieCnPrQz41axwo2wNGKbGoBgrwIEyfgB-2PD8Arg_AIEMSCqDeAMglKrAD6BNpBR1g_AeuXxDgN3t0FOADSFgZrD8ByggW7lQtHwP8BkY-QP8DCHQP0HMA5ISgIkDzB5AuYJBC0IgZBAoGBAJBiwPwCiBoBqDKgWxKbAEN3tmDReESOnXwOzt-AJBUQzkLbiSHBDIAY-VOTPlMgkAd7AAHqv8iDOAPbmobvbnlA4yhrIKiFMP8Ag1_gPAJYdoDWGD2q4RQ1qCtCRBHDqhkAOR0ZwmJeDuAXQJABSBgHjER0wUtfBACU120tAOAwgbhJAFzQFoWYDMH4DyAFA_eIAA`} __position={2} __code={'<Bage primary fitRight hardRight>\\n  A bage\\n</Bage>\\n<Bage color12 fitAll hard>\\n  A bage\\n</Bage>\\n<Bage warning fitLeft hardLeft>\\n  A bage\\n</Bage>'} __scope={{props: this ? this.props : props,Bage,RawBage}}>\n  <Bage primary fitRight hardRight>\n    A bage\n  </Bage>\n  <Bage color12 fitAll hard>\n    A bage\n  </Bage>\n  <Bage warning fitLeft hardLeft>\n    A bage\n  </Bage>\n</Playground>\n           </MDXTag>\n  }\n}\n  ","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Paper from '../Paper';\nimport withStyle from '../../Theme/withStyle';\n\nconst Bage = ({ fitAll, fitLeft, fitRight, ...rest }) => (\n  <Paper rounded overline nowrap {...rest} />\n);\n\nBage.displayName = 'Bage';\nBage.propTypes = {\n  /** Reset Margins */\n  fitAll: PropTypes.bool,\n  /** Reset Left Margin */\n  fitLeft: PropTypes.bool,\n  /** Reset Right Margin */\n  fitRight: PropTypes.bool,\n};\nBage.defaultProps = {\n  fitAll: false,\n  fitLeft: false,\n  fitRight: false,\n};\n\nexport const RawBage = Bage;\n\nexport default withStyle(Bage);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Atom from '../Atom';\nimport withStyle from '../../Theme/withStyle';\n\nconst getFontProps = (color, getColor, rest) => {\n  const nextCss = { ...rest.css, color: getColor(color) };\n  return { ...rest, css: nextCss };\n};\n\nconst Font = ({ children, getColor, color, ...rest }) => (\n  <Atom element=\"span\" {...getFontProps(color, getColor, rest)}>\n    {children}\n  </Atom>\n);\n\nFont.displayName = 'Font';\nFont.propTypes = {\n  children: PropTypes.node,\n  color: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  getColor: PropTypes.func.isRequired,\n};\nFont.defaultProps = {\n  children: null,\n  color: '',\n};\n\nexport default withStyle(Font);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Font from '../Font';\nimport withStyle from '../../Theme/withStyle';\n\nconst modifyProps = ({ css, rize, size, theme, ...props }) => {\n  const nextCss = {};\n  if (rize) {\n    const blur = Math.max(rize ** 3, 5);\n    Object.assign(nextCss, {\n      boxShadow: `\n        0px ${rize}px ${blur}px 0px rgba(0, 0, 0, 0.2),\n        0px ${rize * 2}px ${blur / 2}px 0px rgba(0, 0, 0, 0.14),\n        0px ${rize * 3}px ${blur / rize}1px ${-rize / 2}px rgba(0, 0, 0, 0.12)\n      `,\n    });\n  }\n  if (size) {\n    const cssSize = `${size}px`;\n    Object.assign(nextCss, { width: cssSize, height: cssSize });\n  }\n  return { element: 'div', ...props, css: { ...nextCss, ...css } };\n};\n\nconst Paper = props => <Font {...modifyProps(props)} />;\n\nPaper.displayName = 'Paper';\nPaper.propTypes = {\n  rize: PropTypes.number,\n  size: PropTypes.number,\n};\nPaper.defaultProps = {\n  rize: 0,\n  size: 0,\n};\n\nexport default withStyle(Paper);\n"],"sourceRoot":""}